import numpy as np
from hmmlearn import hmm

states = ["Sunny", "Rainy"]
n_states = len(states)
print('Number of hidden states:', n_states)

observations = ["Dry", "Wet"]
n_observations = len(observations)
print('Number of observations:', n_observations)

state_probability = np.array([0.6, 0.4])
print("State probability:", state_probability)

transition_probability = np.array([[0.7, 0.3], [0.3, 0.7]])
print("\nTransition probability:\n", transition_probability)

emission_probability = np.array([[0.9, 0.1], [0.2, 0.8]])
print("\nEmission probability:\n", emission_probability)

model = hmm.CategoricalHMM(n_components=n_states)
model.startprob_ = state_probability
model.transmat_ = transition_probability
model.emissionprob_ = emission_probability

observations_sequence = np.array([0, 1, 0, 1, 0, 0]).reshape(-1, 1)

hidden_states = model.predict(observations_sequence)
print("Most likely hidden states:", hidden_states)

log_probability, hidden_states = model.decode(observations_sequence, lengths=[len(observations_sequence)], algorithm='viterbi')
print('Log Probability:', log_probability)
print("Most likely hidden states:", hidden_states)
