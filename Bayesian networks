!pip install pgmpy

import numpy as np
import pandas as pd
import os

for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

from pgmpy.models import BayesianModel
from pgmpy.factors.discrete import TabularCPD
import networkx as nx
import matplotlib.pyplot as plt

model = BayesianModel([
    ('Burglary', 'Alarm'), 
    ('Earthquake', 'Alarm'),
    ('Alarm', 'JohnCalls'), 
    ('Alarm', 'MaryCalls')
])

cpd_burglary = TabularCPD(variable='Burglary', variable_card=2, values=[[0.001], [0.999]])
cpd_earthquake = TabularCPD(variable='Earthquake', variable_card=2, values=[[0.002], [0.998]])
cpd_alarm = TabularCPD(
    variable='Alarm', variable_card=2, 
    values=[[0.95, 0.94, 0.29, 0.001], [0.05, 0.06, 0.71, 0.999]], 
    evidence=['Burglary', 'Earthquake'], evidence_card=[2, 2]
)
cpd_john = TabularCPD(
    variable='JohnCalls', variable_card=2, 
    values=[[0.90, 0.05], [0.10, 0.95]], 
    evidence=['Alarm'], evidence_card=[2]
)
cpd_mary = TabularCPD(
    variable='MaryCalls', variable_card=2, 
    values=[[0.70, 0.01], [0.30, 0.99]], 
    evidence=['Alarm'], evidence_card=[2]
)

model.add_cpds(cpd_burglary, cpd_earthquake, cpd_alarm, cpd_john, cpd_mary)

assert model.check_model()

print('Probability distribution, P(Burglary):')
print(cpd_burglary)
print('\nProbability distribution, P(Earthquake):')
print(cpd_earthquake)
print('\nConditional probability distribution, P(Alarm | Burglary, Earthquake):')
print(cpd_alarm)
print('\nConditional probability distribution, P(JohnCalls | Alarm):')
print(cpd_john)
print('\nConditional probability distribution, P(MaryCalls | Alarm):')
print(cpd_mary)

nx.draw(model, with_labels=True)
plt.show()
